- name: Node Exporter 설치
  hosts: all:!monitoring
  become: true
  tasks:
    - name: Node Exporter 바이너리 다운로드
      get_url:
        url: https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz
        dest: /tmp/node_exporter.tar.gz

    - name: 압축 해제
      unarchive:
        src: /tmp/node_exporter.tar.gz
        dest: /opt/
        remote_src: yes

    - name: 기존 node_exporter 바이너리 제거 (파일로 존재할 경우)
      file:
        path: /usr/local/bin/node_exporter
        state: absent
      when: >
        ansible_facts['user_id'] is defined and
        (ansible_facts['user_id'] != 'root' or
        (ansible_facts['user_id'] == 'root' and
        lookup('file', '/usr/local/bin/node_exporter', errors='ignore') != ''))

    - name: 심볼릭 링크 생성
      file:
        src: /opt/node_exporter-1.7.0.linux-amd64/node_exporter
        dest: /usr/local/bin/node_exporter
        state: link
        force: yes

    - name: systemd 서비스 등록
      copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Node Exporter
          After=network.target

          [Service]
          ExecStart=/usr/local/bin/node_exporter
          Restart=always

          [Install]
          WantedBy=multi-user.target

    - name: 서비스 시작 및 활성화
      systemd:
        name: node_exporter
        enabled: yes
        state: started

- name: Docker 기반 모니터링 스택 설치 (Prometheus, Grafana, Alertmanager)
  hosts: monitoring
  become: true
  vars:
    monitoring_root: /opt/monitoring
    infra_components_root: ../../infra-components/monitoring
    prometheus_targets:
      - web:9100
      - app:9100
      - db:9100
      - storage1:9100
      - storage2:9100
      - control:9100
  tasks:
    - name: Ensure Docker is installed
      include_role:
        name: common

    - name: 모니터링 디렉토리 구성
      file:
        path: "{{ monitoring_root }}"
        state: directory
        recurse: yes
    
    - name: docker-compose.yml 배포
      copy:
        src: "{{ infra_components_root }}/docker-compose.yml"
        dest: "{{ monitoring_root }}/docker-compose.yml"

    - name: Docker Compose로 스택 실행
      shell: |
        cd {{ monitoring_root }} && docker-compose up -d

    - name: Prometheus 설정 파일 배포
      copy:
        src: "{{ infra_components_root }}/prometheus.yml"
        dest: "{{ monitoring_root }}/prometheus.yml"

    - name: Grafana 디렉토리 생성
      file:
        path: "{{ item }}"
        state: directory
      loop: "{{ grafana_dirs }}"

    - name: Grafana dashboard 설정 복사
      copy:
        src: "{{ infra_components_root }}/grafana/dashboards.yml"
        dest: "{{ monitoring_root }}/grafana/provisioning/dashboards/dashboards.yml"

    - name: Grafana node_exporter dashboard 복사
      copy:
        src: "{{ infra_components_root }}/grafana/node_exporter_dashboard.json"
        dest: "{{ monitoring_root }}/grafana/dashboards/node_exporter_dashboard.json"

    - name: Alertmanager 디렉토리 생성
      file:
        path: "{{ monitoring_root }}/alertmanager"
        state: directory

    - name: rules 디렉토리 생성
      file:
        path: /opt/monitoring/rules
        state: directory

    - name: Alertmanager 설정 파일 복사
      copy:
        src: "{{ infra_components_root }}/alertmanager/alertmanager.yml"
        dest: "{{ monitoring_root }}/alertmanager/alertmanager.yml"

    - name: Prometheus Alert Rules 복사
      copy:
        src: "{{ infra_components_root }}/rules/alert_rules.yml"
        dest: "{{ monitoring_root }}/rules/alert_rules.yml"

    # 7. GlusterFS 설치 및 마운트
    - name: install glusterfs
      apt:
        name: glusterfs-client
        state: present

    - name: unmount glusterfs
      shell: |
        umount -l shared/mnt/logs/monitoring
      ignore_errors: true

    - name: Remove mount dir monitoring logs
      file:
        path: shared/mnt/logs/monitoring
        state: absent
      ignore_errors: true

    - name: Create mount dir monitoring logs
      file:
        path: shared/mnt/logs/monitoring
        state: directory
        mode: '0777'

    - name: GlusterFS mount monitoring logs
      mount:
        path: "shared/mnt/logs/monitoring"
        src: "172.16.1.40:monitoring"
        fstype: glusterfs
        opts: defaults,_netdev
        state: mounted
