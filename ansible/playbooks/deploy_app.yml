---
- name: Deploy Flask App Cluster
  hosts: app
  become: true

  vars:
    deploy_root: /home/user1/app_deploy  # 원격 서버에 생성할 디렉토리
    local_project_root: ../../infra-components/app
    flask_app_files:
      - Dockerfile
      - docker-compose.yml
      - requirements.txt
      - .env
    flask_app_dir: app  # app/main.py, app/config.py 포함

  tasks:
    # Docker 설치
    - name: Ensure Docker is installed
      include_role:
        name: common

    # 디렉토리 생성
    - name: Create app project directory
      file:
        path: "{{ deploy_root }}"
        state: directory
        mode: '0755'
        owner: user1
        group: user1

    - name: Create app subdirectory
      file:
        path: "{{ deploy_root }}/{{ flask_app_dir }}"
        state: directory
        mode: '0755'
        owner: user1
        group: user1

    # 애플리케이션 관련 파일 복사
    - name: Copy base files (Dockerfile, .env, requirements.txt, compose)
      copy:
        src: "{{ local_project_root }}/{{ item }}"
        dest: "{{ deploy_root }}/{{ item }}"
        owner: user1
        group: user1
        mode: '0644'
      loop: "{{ flask_app_files }}"

    - name: Copy Flask app code (main.py, config.py)
      copy:
        src: "{{ local_project_root }}/{{ flask_app_dir }}/{{ item }}"
        dest: "{{ deploy_root }}/{{ flask_app_dir }}/{{ item }}"
        owner: user1
        group: user1
        mode: '0644'
      loop:
        - main.py
        - config.py

    # 기존 컨테이너 제거
    - name: Stop and remove existing containers
      shell: docker compose down || true
      args:
        chdir: "{{ deploy_root }}"
      ignore_errors: true

    # Compose 실행
    - name: Launch Flask app containers
      shell: docker compose up -d --build --force-recreate
      args:
        chdir: "{{ deploy_root }}"

    # 7. GlusterFS 설치 및 마운트
    - name: install glusterfs
      apt:
        name: glusterfs-client
        state: present

    - name: unmount glusterfs
      shell: |
        umount -l shared/mnt/logs/app
      ignore_errors: true

    - name: Remove mount dir app logs
      file:
        path: shared/mnt/logs/app
        state: absent
      ignore_errors: true

    - name: Create mount dir app logs
      file:
        path: shared/mnt/logs/app
        state: directory
        mode: '0777'

    - name: GlusterFS mount app logs
      mount:
        path: "shared/mnt/logs/app"
        src: "172.16.1.40:app"
        fstype: glusterfs
        opts: defaults,_netdev
        state: mounted
