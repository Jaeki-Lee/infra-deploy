pipeline {
    agent any
    stages {
        // 환경 초기화 또는 클린업 단계
        stage('Prepare Workspace') {
            steps {
                deleteDir()
            }
        }

        // Git에서 코드를 클론합니다.
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/Jaeki-Lee/infra-deploy.git'
            }
        }

        // Control Server로 코드를 전송합니다.
        stage('Transfer to Control Server') {
            steps {
                sshagent(['control-server-ssh-key']) {
                    sh '''
                        rsync -av --exclude='.git' -e "ssh -o StrictHostKeyChecking=no" /var/lib/jenkins/workspace/infra-deploy/ user1@192.168.3.129:/home/user1/infra-deploy/
                    '''
                }
            }
        }

        //  Control Server에서 control Playbook을 실행합니다.
        stage('Run Ansible Playbook') {
            steps {
                sshagent(['control-server-ssh-key']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no user1@192.168.3.129 '
                            cd /home/user1/infra-deploy/ansible &&
                            ansible-playbook -i inventory.yml playbooks/deploy_control.yml --ask-become-pass
                        '
                    '''
                }
            }
        }

        //  Control Server에서 storage Playbook을 실행합니다.
        stage('Run Ansible Playbook gluster') {
            steps {
                sshagent(['control-server-ssh-key']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no user1@192.168.3.129 "
                        cd /home/user1/infra-deploy/ansible &&
                        ansible-playbook -i inventory.yml playbooks/deploy_storage_gluster.yml --ask-become-pass --limit storage
                    "
                """
                }
            }
        }

        //  Control Server에서 Ansible Playbook을 실행 cron으로 s3 백업 
        stage('Run Ansible Playbook cron') {
            steps {
                sshagent(['control-server-ssh-key']) {
                    withCredentials([string(credentialsId: 'ANSIBLE_VAULT_PASSWORD', variable: 'VAULT_PASS')]) {
                        sh """
                            # 1. vault_pass.txt 생성
                            echo "$VAULT_PASS" > ansible/vault_pass.txt
                            chmod 600 ansible/vault_pass.txt

                            # 2. 복사
                            scp -o StrictHostKeyChecking=no ansible/vault_pass.txt user1@192.168.3.129:/home/user1/infra-deploy/ansible/vault_pass.txt

                            # 3. 원격에서 Ansible 실행
                            ssh -o StrictHostKeyChecking=no user1@192.168.3.129 "
                                cd /home/user1/infra-deploy/ansible &&
                                ansible-playbook playbooks/backup_cron.yml -i inventory.yml --vault-password-file ./vault_pass.txt
                        "
                    """
                    }
                }
            }
        }

        // Control Server에서 DB Playbook을 실행합니다.
        stage('Run DB HA Playbook') {
            steps {
                sshagent(['control-server-ssh-key']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no user1@192.168.3.129 '
                            cd /home/user1/infra-deploy/ansible &&
                            ansible-playbook -i inventory.yml playbooks/deploy_db.yml --ask-become-pass
                        '
                    '''
                }
            }
        }

        // Control Server에서 App Playbook을 실행합니다.
        stage('Run App Playbook') {
            steps {
                sshagent(['control-server-ssh-key']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no user1@192.168.3.129 '
                            cd /home/user1/infra-deploy/ansible &&
                            ansible-playbook -i inventory.yml playbooks/deploy_app.yml --ask-become-pass
                        '
                    '''
                }
            }
        }

        // Control Server에서 Web Playbook을 실행합니다.
        stage('Run Web Playbook') {
            steps {
                sshagent(['control-server-ssh-key']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no user1@192.168.3.129 '
                            cd /home/user1/infra-deploy/ansible &&
                            ansible-playbook -i inventory.yml playbooks/deploy_web.yml --ask-become-pass
                        '
                    '''
                }
            }
        }

        stage('Run Monitoring Playbook') {
            steps {
                sshagent(['control-server-ssh-key']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no user1@192.168.3.129 '
                            cd /home/user1/infra-deploy/ansible &&
                            ansible-playbook -i inventory.yml playbooks/deploy_monitoring.yml --ask-become-pass
                        '
                    '''
                }
            }
        }
        
    } 
}
